name: Release Prod
on:
  push:
    branches:
      - 'release/prod'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Add google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json
      - name: Run Lint
        run: bash ./gradlew lint
      - name: Upload Results
        uses: actions/upload-artifact@v2
        with:
          name: lint-results
          path: app/build/reports/lint-results.html
          if-no-files-found: ignore

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Add google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json
      - name: Unit tests
        run: bash ./gradlew testProdRelease
      - name: Upload Results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: prod-release-test-results
          path: app/build/reports/tests/testProdReleaseUnitTest/
          if-no-files-found: ignore

  ui_tests_setup:
    name: Build APKs
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Add google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json
      - name: Assemble App Debug APK
        run: bash ./gradlew assembleProdDebug --stacktrace
      - name: Upload app debug APK
        uses: actions/upload-artifact@v1
        with:
          name: app-prod-debug
          path: app/build/outputs/apk/prod/debug/app-prod-debug.apk
      - name: Assemble Android Instrumentation Tests
        run: bash ./gradlew assembleDebugAndroidTest
      - name: Upload Android Test APK
        uses: actions/upload-artifact@v1
        with:
          name: app-prod-debug-androidTest
          path: app/build/outputs/apk/androidTest/prod/debug/app-prod-debug-androidTest.apk

  ui_tests:
    name: UI Test
    runs-on: ubuntu-latest
    needs: [ui_tests_setup]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Download app APK
        uses: actions/download-artifact@v1
        with:
          name: app-prod-debug
      - name: Download Android Test APK
        uses: actions/download-artifact@v1
        with:
          name: app-prod-debug-androidTest
      - name: Login to Google Cloud
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_AUTH }}
      - name: Firebase Test Lab
        run: gcloud firebase test android run \
          --type instrumentation \
          --app app-prod-debug/app-prod-debug.apk \
          --test app-prod-debug-androidTest/app-prod-debug-androidTest.apk \
          --device model=Pixel2,version=29,orientation=portrait

  sign_release:
    name: Sign Release
    runs-on: ubuntu-latest
    needs: [unit_tests,ui_tests]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Add google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > app/google-services.json
      - name: Assemble Release AppBundle
        run: bash ./gradlew bundleProdRelease --stacktrace
      - name: Upload app release APK
        uses: actions/upload-artifact@v1
        with:
          name: app-prod-release
          path: app/build/outputs/bundle/prodRelease/app-prod-release.aab
      - name: Sign Android release
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/bundle/prodRelease
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
      - name: Upload Signed AppBundle
        uses: actions/upload-artifact@v2
        with:
          name: signed-app-bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
  release:
    name: Release to Play Store
    runs-on: ubuntu-latest
    needs: [sign_release]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get AppBundle
        uses: actions/download-artifact@v2
        with:
          name: signed-app-bundle
      - name: Release to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.wednesday.template
          releaseFiles: signed-app-bundle/signed-app-bundle.aab
          track: internal
